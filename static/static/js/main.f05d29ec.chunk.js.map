{"version":3,"sources":["pages/after.js","pages/get-ready.js","utils/call-api.js","pages/quakes.js","App.js","reportWebVitals.js","index.js"],"names":["After","props","history","useHistory","Fade","in","style","padding","marginBottom","Grid","container","spacing","item","xs","md","Paper","Typography","variant","List","marginInline","ListItem","ListItemIcon","Icon","ListItemText","primary","secondary","window","quake","id","Button","color","onClick","push","Fragment","GetReady","openInNewTab","url","open","focus","React","useEffect","setTab","fontWeight","button","divider","toQueryString","params","Object","entries","map","kv","encodeURIComponent","join","callAPI","endpoint","method","successMessage","a","console","log","fetch","response","status","success","toString","startsWith","json","makeAlert","makeError","error","useStyles","makeStyles","theme","classPage","classSection","marginTop","classSectionItem","fab","position","bottom","right","shine","background","backgroundImage","backgroundRepeat","backgroundSize","WebkitAnimationDuration","WebkitAnimationFillMode","WebkitAnimationIterationCount","WebkitAnimationName","WebkitAnimationTimingFunction","animationDuration","animationFillMode","animationIterationCount","animationName","animationTimingFunction","Quake","quakeID","useParams","useState","quakes","setQuake","useMeasure","ref","measurements","data","getQuake","Toolbar","IconButton","goBack","fontSize","marginLeft","paddingLeft","display","alignItems","flexWrap","Date","timeStart","toDateString","toLocaleTimeString","timeEnd","Math","round","strength","channel","height","width","title","strokeWidth","y","time","x","QuakeGroup","classes","options","containerRef","useRef","isVisible","setIsVisible","callbackFunction","entry","isIntersecting","observer","IntersectionObserver","observedRef","current","observe","unobserve","useElementOnScreen","root","rootMargin","threshold","fetchQuakes","className","x1","y1","x2","y2","Array","keys","product","QuakesList","totalRows","setTotalRows","currentPage","setCurrentPage","setQuakes","prev","page","per_page","previousQuakes","JSON","parse","stringify","list","total","msToString","ms","seconds","numyears","floor","numdays","numhours","numminutes","numseconds","ceil","sort","b","stroke","min","now","length","Quakes","path","useRouteMatch","Alerts","shaking","setShaking","context","AudioContext","o","createOscillator","g","createGain","connect","type","destination","oscillator","setOscillator","socket","resetOscillator","stop","on","start","navigator","vibrate","msg","off","vibrator","setInterval","clearInterval","zIndex","backgroundColor","paddingTop","paddingBottom","textAlign","margin","top","float","left","src","Home","isNative","connected","marginBlock","App","setError","severity","setSeverity","setOpen","location","search","includes","setConnected","io","android","userAgent","toLowerCase","indexOf","appDialogOpen","setAppDialogOpen","interactionDialogOpen","setInteractionDialogOpen","tab","urls","Snackbar","autoHideDuration","onClose","Alert","BottomNavigation","value","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f05d29ec.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function After(props) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Fade in>\r\n      <div style={{ padding: 20, marginBottom: 50 }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper style={{ padding: \"15px 25px\" }}>\r\n              <Typography variant=\"h6\">Be alert</Typography>\r\n              <Typography variant=\"subtitle1\">\r\n                Aftershocks are common\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper style={{ padding: \"15px 25px\" }}>\r\n              <Typography variant=\"h6\">\r\n                Stay safer after an earthquake\r\n              </Typography>\r\n              <List style={{ marginInline: \"-10px\" }}>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <Icon>do_not_step</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"‎Get shoes\"\r\n                    secondary=\"‎Before going anywhere, even to the next room\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <Icon>local_fire_department</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Check gas\"\r\n                    secondary=\"If you smell gas, turn off the gas main to the building. If you can't, evacuate.\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <Icon>domain_disabled</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Avoid damaged buildings\"\r\n                    secondary=\"‎Check for cracks and damage. Evacuate if it looks like the building may collapse.\"\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            {window.quake && window.quake.id ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => history.push(\"/quakes/\" + window.quake.id)}\r\n              >\r\n                View quake details\r\n              </Button>\r\n            ) : (\r\n              <Typography variant=\"body1\">\r\n                Check the Quakes tab to see details about this earthquake\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper style={{ padding: \"15px 25px\" }}>\r\n              <Typography variant=\"h6\">More safety tips</Typography>\r\n              <List style={{ marginInline: \"-10px\" }}>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <Icon>water_drop</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"‎Get your emergency supplies\"\r\n                    secondary=\"If water is shut off, use emergency supplies like a water heater or melted ice cubes\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <Icon>house</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Use caution when cleaning up\"\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        • Put out small fires. If you can't, evacuate.\r\n                        <br />\r\n                        • Check electric, water pipes and appliances for damage.\r\n                        If you see broken pipe, shut off the main valve.\r\n                        <br />• Clean up spilled medicines, drugs, or other\r\n                        harmful materials\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <Icon>water</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Move to higher ground\"\r\n                    secondary=\"‎If you live in a coastal area, relocate as soon as the shaking stops to avoid tsunamis\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <Icon>report_problem</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Avoid fallen objects\"\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        • Don't touch fallen or damaged utility lines\r\n                        <br />• Don't use a damaged chimney. Approach fallen or\r\n                        damaged chimneys with caution\r\n                      </React.Fragment>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <Icon>refresh</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Expect aftershocks\"\r\n                    secondary=\"‎You may recieve an alert if an after shock is expected or happens.\"\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n","import Fade from \"@material-ui/core/Fade\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\n\r\nexport default function GetReady(props) {\r\n  React.useEffect(() => {\r\n    props.setTab(2);\r\n  }, []);\r\n\r\n  function openInNewTab(url) {\r\n    window.open(url, \"_blank\").focus();\r\n  }\r\n\r\n  return (\r\n    <Fade in>\r\n      <div style={{ padding: 20, marginBottom: 50 }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper style={{ padding: \"15px 25px\" }}>\r\n              <Typography variant=\"body1\">Remember to:</Typography>\r\n              <Typography variant=\"h5\" style={{ fontWeight: 600 }}>\r\n                Drop, cover, and hold!\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper style={{ padding: \"15px 25px\" }}>\r\n              <Typography variant=\"h6\">\r\n                Get ready before an earthquake\r\n              </Typography>\r\n              <List style={{ marginInline: \"-10px\" }}>\r\n                <ListItem\r\n                  button\r\n                  divider\r\n                  onClick={() =>\r\n                    openInNewTab(\r\n                      \"https://getready.govt.nz/prepared/household/plan/\"\r\n                    )\r\n                  }\r\n                >\r\n                  <ListItemIcon>\r\n                    <Icon>assignment_turned_in</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"‎Make a emergency plan online\"\r\n                    secondary=\"Make a plan online with your family/flatmates/friends to get through an emergency. Think about the things you need every day and work out what you would do if you didn’t have them.\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  divider\r\n                  onClick={() =>\r\n                    openInNewTab(\"https://www.eqc.govt.nz/be-prepared\")\r\n                  }\r\n                >\r\n                  <ListItemIcon>\r\n                    <Icon>house</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Be Prepared (eqc.govt.nz)\"\r\n                    secondary=\"Visit the Earthquake Commission's website for more information on making your home safer.\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  onClick={() =>\r\n                    openInNewTab(\r\n                      \"https://getready.govt.nz/prepared/household/supplies/\"\r\n                    )\r\n                  }\r\n                >\r\n                  <ListItemIcon>\r\n                    <Icon>water_drop</Icon>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Work out what supplies you need\"\r\n                    secondary=\"‎In an emergency, you may be stuck at home for three days or more. Figure out what supplies you need and make a plan to work out what you need to get your family through.\"\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n","const toQueryString = (params) =>\r\n  Object.entries(params)\r\n    .map((kv) => kv.map(encodeURIComponent).join(\"=\"))\r\n    .join(\"&\");\r\n\r\nexport default async function callAPI(\r\n  endpoint,\r\n  method,\r\n  params,\r\n  successMessage\r\n) {\r\n  console.log(\"API call:\", endpoint, method, params);\r\n\r\n  const response = await fetch(\r\n    \"/api/v1/\" + endpoint + (params ? \"?\" + toQueryString(params) : \"\"),\r\n    { method: method }\r\n  );\r\n\r\n  const status = response.status;\r\n  var success = status.toString().startsWith(\"2\");\r\n  var json = success && status !== 204 && (await response.json());\r\n\r\n  if (success) {\r\n    if (successMessage) {\r\n      window.makeAlert(successMessage, \"success\");\r\n    }\r\n  } else {\r\n    const makeError = (error) => window.makeAlert(error, \"error\");\r\n\r\n    switch (status) {\r\n      case 400:\r\n        makeError(\"Bad request. If this is an error, try contacting Ben\");\r\n        break;\r\n      case 404:\r\n        makeError(\r\n          \"Resource not found. If this is an error, try contacting Ben\"\r\n        );\r\n        break;\r\n      case 405:\r\n        makeError(\"Invalid endpoint. If this is an error, try contacting Ben\");\r\n        break;\r\n      default:\r\n        makeError(\"Unknown error \" + status + \", try contacting Ben\");\r\n    }\r\n  }\r\n\r\n  return { status, success, json };\r\n}\r\n\r\nwindow.callAPI = callAPI;\r\n","import MuiAppBar from \"@material-ui/core/AppBar\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport HeightIcon from \"@material-ui/icons/Height\";\r\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { useMeasure } from \"react-use\";\r\nimport {\r\n  HorizontalGridLines,\r\n  LineSeriesCanvas,\r\n  VerticalGridLines,\r\n  XAxis,\r\n  XYPlot,\r\n  YAxis,\r\n} from \"react-vis\";\r\nimport \"../App.css\";\r\nimport callAPI from \"../utils/call-api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  classPage: {\r\n    padding: theme.spacing(6),\r\n  },\r\n  classSection: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  classSectionItem: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  shine: {\r\n    background: \"#f6f7f8\",\r\n    backgroundImage:\r\n      \"linear-gradient(to right, #f6f7f8 0%, #edeef1 20%, #f6f7f8 40%, #f6f7f8 100%)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"800px 104px\",\r\n    WebkitAnimationDuration: \"0.5s\",\r\n    WebkitAnimationFillMode: \"forwards\",\r\n    WebkitAnimationIterationCount: \"infinite\",\r\n    WebkitAnimationName: \"placeholderShimmer\",\r\n    WebkitAnimationTimingFunction: \"linear\",\r\n    animationDuration: \"0.5s\",\r\n    animationFillMode: \"forwards\",\r\n    animationIterationCount: \"infinite\",\r\n    animationName: \"placeholderShimmer\",\r\n    animationTimingFunction: \"linear\",\r\n  },\r\n}));\r\n\r\nfunction Quake(props) {\r\n  let history = useHistory();\r\n  let { quakeID } = useParams();\r\n  const [quake, setQuake] = React.useState(props.quakes[quakeID]);\r\n  const [ref, measurements] = useMeasure();\r\n\r\n  console.log(\"render quake\");\r\n\r\n  React.useEffect(() => {\r\n    async function getQuake() {\r\n      const { success, json } = await callAPI(\"quakes/\" + quakeID, \"GET\");\r\n      if (success) {\r\n        setQuake(json);\r\n      }\r\n    }\r\n\r\n    if (!(quake && quake.data)) {\r\n      getQuake();\r\n    }\r\n    return;\r\n  }, [quake, quakeID]);\r\n\r\n  return (\r\n    <Fade in>\r\n      <div style={{ padding: 20 }}>\r\n        <MuiAppBar>\r\n          <Toolbar>\r\n            <IconButton onClick={() => history.goBack()}>\r\n              <Icon\r\n                fontSize=\"large\"\r\n                style={{ color: \"#FFFFFF\", marginLeft: -5 }}\r\n              >\r\n                arrow_back\r\n              </Icon>\r\n            </IconButton>\r\n            <Typography style={{ marginLeft: 10 }} variant=\"h6\">\r\n              Earthquake #{quakeID}\r\n            </Typography>\r\n          </Toolbar>\r\n        </MuiAppBar>\r\n        <Toolbar />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\">Details:</Typography>\r\n            {quake && (\r\n              <div style={{ paddingLeft: \"10px\" }}>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  <EventIcon />\r\n                  <Typography variant=\"body1\" style={{ marginLeft: \"10px\" }}>\r\n                    {new Date(quake.timeStart).toDateString()}\r\n                  </Typography>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  <ScheduleIcon />\r\n                  <Typography variant=\"body1\" style={{ marginLeft: \"10px\" }}>\r\n                    {new Date(quake.timeStart).toLocaleTimeString()} -{\" \"}\r\n                    {new Date(quake.timeEnd).toLocaleTimeString()}\r\n                  </Typography>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  <HourglassEmptyIcon />\r\n                  <Typography variant=\"body1\" style={{ marginLeft: \"10px\" }}>\r\n                    {Math.round((quake.timeEnd - quake.timeStart) / 100) / 10}{\" \"}\r\n                    seconds\r\n                  </Typography>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  <HeightIcon />\r\n                  <Typography variant=\"body1\" style={{ marginLeft: \"10px\" }}>\r\n                    {Math.round(quake.strength / 100000) / 10} million EHZ\r\n                    counts per second\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\">Raw data:</Typography>\r\n            <Typography style={{ marginTop: \"10px\" }} variant=\"body1\">\r\n              All y-axis represent strength in thousand counts per 10\r\n              milliseconds\r\n            </Typography>\r\n          </Grid>\r\n\r\n          {[\"EHZ\", \"ENE\", \"ENN\", \"ENZ\"].map((channel) => (\r\n            <Grid item xs={12} md={6}>\r\n              <Paper style={{ height: \"202px\" }}>\r\n                <Typography variant=\"h6\" style={{ marginLeft: \"40%\" }}>\r\n                  Channel {channel}\r\n                </Typography>\r\n                {quake && quake.data ? (\r\n                  <XYPlot width={measurements.width - 20} height={170}>\r\n                    <VerticalGridLines />\r\n                    <HorizontalGridLines />\r\n                    <XAxis title=\"Time (seconds)\" />\r\n                    <YAxis />\r\n                    <LineSeriesCanvas\r\n                      strokeWidth={1}\r\n                      data={quake.data[channel].map((y, time) => ({\r\n                        x: time / 100,\r\n                        y: y / 1000,\r\n                      }))}\r\n                    />\r\n                  </XYPlot>\r\n                ) : (\r\n                  <div width={measurements.width - 20} height={170} />\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n          <Grid item xs={12} md={6}>\r\n            <div ref={ref} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n\r\nfunction useElementOnScreen(options) {\r\n  const containerRef = React.useRef(null);\r\n  const [isVisible, setIsVisible] = React.useState(false);\r\n\r\n  function callbackFunction(entries) {\r\n    const [entry] = entries;\r\n    setIsVisible(entry.isIntersecting);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const observer = new IntersectionObserver(callbackFunction, options);\r\n    const observedRef = containerRef.current;\r\n    if (observedRef) observer.observe(observedRef);\r\n    return () => {\r\n      if (observedRef) observer.unobserve(observedRef);\r\n    };\r\n  }, [containerRef, options]);\r\n\r\n  return [containerRef, isVisible];\r\n}\r\n\r\nfunction QuakeGroup(props) {\r\n  const classes = useStyles();\r\n  const [containerRef, isVisible] = useElementOnScreen({\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: 0.5,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"sdg\");\r\n    if (isVisible) {\r\n      props.fetchQuakes();\r\n    }\r\n  }, [isVisible]);\r\n\r\n  console.log(\"visibility\", isVisible);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem ref={containerRef} divider button>\r\n        <ListItemIcon>\r\n          <svg height=\"40\" width=\"10\" className={classes.shine}>\r\n            <line\r\n              x1=\"0\"\r\n              y1=\"0\"\r\n              x2=\"0\"\r\n              y2=\"40\"\r\n              style={{\r\n                strokeWidth: 10,\r\n              }}\r\n            />\r\n          </svg>\r\n        </ListItemIcon>\r\n        <ListItemText primary={\"‎\"} secondary={\"‎\"} className={classes.shine} />\r\n      </ListItem>\r\n      {[...Array(9).keys()].map((product) => (\r\n        <ListItem divider button>\r\n          <ListItemIcon>\r\n            <svg height=\"40\" width=\"10\" className={classes.shine}>\r\n              <line\r\n                x1=\"0\"\r\n                y1=\"0\"\r\n                x2=\"0\"\r\n                y2=\"40\"\r\n                style={{\r\n                  strokeWidth: 10,\r\n                }}\r\n              />\r\n            </svg>\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={\"‎\"}\r\n            secondary={\"‎\"}\r\n            className={classes.shine}\r\n          />\r\n        </ListItem>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction QuakesList(props) {\r\n  const [totalRows, setTotalRows] = React.useState(1000);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n\r\n  const pageSize = 40;\r\n\r\n  const { setQuakes, quakes } = props;\r\n\r\n  const history = useHistory();\r\n\r\n  console.log(\"render quakes list\");\r\n\r\n  async function fetchQuakes() {\r\n    setCurrentPage((prev) => prev + 1);\r\n    const { success, json } = await callAPI(\"quakes\", \"GET\", {\r\n      page: currentPage,\r\n      per_page: pageSize,\r\n    });\r\n    if (success) {\r\n      setQuakes((prev) => {\r\n        var previousQuakes = JSON.parse(JSON.stringify(prev));\r\n        var quake;\r\n        for (quake of json.list) {\r\n          previousQuakes[quake.id] = quake;\r\n        }\r\n        console.log(\"quakes set\");\r\n        return previousQuakes;\r\n      });\r\n      setTotalRows(json.total);\r\n    }\r\n  }\r\n\r\n  console.log(quakes);\r\n\r\n  React.useEffect(() => {\r\n    window.currentPage = 1;\r\n    fetchQuakes();\r\n  }, []);\r\n\r\n  function msToString(ms) {\r\n    const seconds = ms / 1000;\r\n    var numyears = Math.floor(seconds / 31536000);\r\n    var numdays = Math.floor((seconds % 31536000) / 86400);\r\n    var numhours = Math.floor(((seconds % 31536000) % 86400) / 3600);\r\n    var numminutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\r\n    var numseconds = Math.ceil((((seconds % 31536000) % 86400) % 3600) % 60);\r\n\r\n    if (numyears >= 1) {\r\n      return numyears + \" year\" + (numyears === 1 ? \"\" : \"s\");\r\n    } else if (numdays >= 1) {\r\n      return numdays + \" day\" + (numdays === 1 ? \"\" : \"s\");\r\n    } else if (numhours >= 1) {\r\n      return numhours + \" hour\" + (numhours === 1 ? \"\" : \"s\");\r\n    } else if (numminutes >= 1) {\r\n      return numminutes + \" minute\" + (numminutes === 1 ? \"\" : \"s\");\r\n    } else {\r\n      return numseconds + \" second\" + (numseconds === 1 ? \"\" : \"s\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fade in>\r\n      <Paper style={{ width: \"100%\" }}>\r\n        <List>\r\n          {Object.keys(quakes)\r\n            .sort(function (a, b) {\r\n              return b - a;\r\n            })\r\n            .map((id) => {\r\n              const quake = quakes[id];\r\n              return (\r\n                <ListItem\r\n                  divider\r\n                  button\r\n                  onClick={() => history.push(\"/quakes/\" + id)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <svg height=\"40\" width=\"10\">\r\n                      <line\r\n                        x1=\"0\"\r\n                        y1=\"0\"\r\n                        x2=\"0\"\r\n                        y2=\"40\"\r\n                        stroke={\r\n                          \"rgb(217, 72, 1, \" +\r\n                          Math.min(quake.strength / 100000000, 1) +\r\n                          \")\"\r\n                        }\r\n                        style={{\r\n                          strokeWidth: 10,\r\n                        }}\r\n                      />\r\n                    </svg>\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={msToString(Date.now() - quake.timeStart) + \" ago\"}\r\n                    secondary={\r\n                      \"#\" +\r\n                      id +\r\n                      \" • \" +\r\n                      Math.ceil(quake.strength / 1000000) +\r\n                      \" million EHZ counts per second\"\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n\r\n          {Object.keys(quakes).length <= totalRows && (\r\n            <QuakeGroup fetchQuakes={fetchQuakes} />\r\n          )}\r\n        </List>\r\n      </Paper>\r\n    </Fade>\r\n  );\r\n}\r\n\r\nexport default function Quakes(props) {\r\n  const [quakes, setQuakes] = React.useState({});\r\n  let match = useRouteMatch();\r\n  const path = match.path;\r\n\r\n  console.log(\"render quakes\");\r\n\r\n  React.useEffect(() => {\r\n    props.setTab(1);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: \"90%\" }}>\r\n      <Switch>\r\n        <Route path={path + \"/:quakeID\"}>\r\n          <Quake quakes={quakes} />\r\n        </Route>\r\n        <Route path={path}>\r\n          <QuakesList setQuakes={setQuakes} quakes={quakes} />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import { IconButton } from \"@material-ui/core\";\nimport MuiAppBar from \"@material-ui/core/AppBar\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport After from \"./pages/after\";\nimport GetReady from \"./pages/get-ready\";\nimport Quakes from \"./pages/quakes\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction Alerts(props) {\n  const history = useHistory();\n  const [shaking, setShaking] = React.useState(false);\n  const [oscillator, setOscillator] = React.useState(() => {\n    var context = new AudioContext();\n    var o = context.createOscillator();\n    var g = context.createGain();\n    o.connect(g);\n    o.type = \"square\";\n    g.connect(context.destination);\n    return o;\n  });\n  const socket = props.socket;\n\n  function resetOscillator() {\n    oscillator.stop();\n    var context = new AudioContext();\n    var o = context.createOscillator();\n    var g = context.createGain();\n    o.connect(g);\n    o.type = \"square\";\n    g.connect(context.destination);\n    setOscillator(o);\n  }\n\n  React.useEffect(() => {\n    socket.on(\"shaking start\", () => {\n      setShaking(true);\n      oscillator.start(0);\n      if (window.navigator.vibrate) window.navigator.vibrate(1000);\n    });\n\n    socket.on(\"shaking stop\", (msg) => {\n      setShaking(false);\n      window.quake = msg;\n      resetOscillator();\n      history.push(\"/after\");\n    });\n\n    return () => {\n      socket.off(\"shaking start\");\n      socket.off(\"shaking stop\");\n    };\n  }, [oscillator]);\n\n  React.useEffect(() => {\n    const vibrator = setInterval(() => {\n      if (shaking && window.navigator.vibrate) window.navigator.vibrate(500);\n    }, 100);\n\n    return () => clearInterval(vibrator);\n  }, [shaking]);\n\n  return (\n    <Fade in={shaking}>\n      <div\n        style={{\n          position: \"fixed\",\n          width: \"100vw\",\n          height: \"100vh\",\n          zIndex: 99999999,\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: \"rgb(200, 30, 30)\",\n            width: \"100%\",\n            paddingTop: \"min(60px, 5vh)\",\n            paddingBottom: \"min(60px, 30vh)\",\n            textAlign: \"center\",\n            color: \"white\",\n            height: \"15vh\",\n          }}\n        >\n          <Icon fontSize=\"large\" style={{ margin: \"auto\" }}>\n            warning\n          </Icon>\n          <Typography variant=\"h3\" style={{ margin: \"auto\", marginTop: 10 }}>\n            Earthquake\n          </Typography>\n        </div>\n        <div\n          style={{\n            backgroundColor: \"black\",\n            width: \"100%\",\n            height: \"100%\",\n            textAlign: \"center\",\n            color: \"white\",\n            // padding: 20,\n          }}\n        >\n          <div style={{ paddingTop: 10 }}>\n            <div\n              style={{ marginTop: 10, position: \"relative\", height: \"15vh\" }}\n            >\n              <Typography\n                variant=\"h4\"\n                style={{\n                  fontWeight: 600,\n                  position: \"absolute\",\n                  width: \"50%\",\n                  top: \"min(8vw, 7vh)\",\n                  float: \"left\",\n                  left: 0,\n                }}\n              >\n                Drop\n              </Typography>\n              <img\n                style={{\n                  width: \"min(45%, 30vh)\",\n                  position: \"absolute\",\n                  right: 40,\n                }}\n                src=\"/drop.png\"\n              />\n            </div>\n            <div\n              style={{ marginTop: 10, position: \"relative\", height: \"15vh\" }}\n            >\n              <Typography\n                variant=\"h4\"\n                style={{\n                  fontWeight: 600,\n                  position: \"absolute\",\n                  width: \"50%\",\n                  top: \"min(8vw, 7vh)\",\n                  float: \"left\",\n                  left: 0,\n                }}\n              >\n                Cover\n              </Typography>\n              <img\n                style={{\n                  width: \"min(45%, 30vh)\",\n                  position: \"absolute\",\n                  right: 40,\n                }}\n                src=\"/cover.png\"\n              />\n            </div>\n            <div\n              style={{ marginTop: 10, position: \"relative\", height: \"15vh\" }}\n            >\n              <Typography\n                variant=\"h4\"\n                style={{\n                  fontWeight: 600,\n                  position: \"absolute\",\n                  width: \"50%\",\n                  top: \"min(8vw, 7vh)\",\n                  float: \"left\",\n                  left: 0,\n                }}\n              >\n                Hold\n              </Typography>\n              <img\n                style={{\n                  width: \"min(45%, 30vh)\",\n                  position: \"absolute\",\n                  right: 40,\n                }}\n                src=\"/hold.png\"\n              />\n            </div>\n            <div\n              style={{\n                marginTop: \"2vh\",\n                height: \"10vh\",\n              }}\n            >\n              <IconButton\n                onClick={() => (\n                  history.push(\"/after\"), setShaking(false), resetOscillator()\n                )}\n              >\n                <Icon\n                  fontSize=\"large\"\n                  style={{ margin: \"auto\", color: \"white\" }}\n                >\n                  clear\n                </Icon>\n              </IconButton>\n              <Typography\n                variant=\"subtitle1\"\n                style={{\n                  margin: \"auto\",\n                }}\n              >\n                Dismiss\n              </Typography>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n\nfunction Home(props) {\n  return (\n    <Fade in>\n      <div>\n        {props.isNative ? (\n          <div style={{ height: 76 }} />\n        ) : (\n          <MuiAppBar\n            style={{\n              padding: 10,\n              backgroundColor: props.connected ? \"green\" : \"orange\",\n            }}\n            position=\"static\"\n          >\n            <Toolbar>\n              <Typography variant=\"h5\">\n                Status: {props.connected ? \"Connected\" : \"Connecting...\"}\n              </Typography>\n            </Toolbar>\n          </MuiAppBar>\n        )}\n        <div style={{ padding: 20 }}>\n          <Typography variant=\"h5\" style={{ marginBlock: 10 }}>\n            Thanks for using Quake Alert!\n          </Typography>\n          <Typography variant=\"body1\" style={{ marginBlock: 10 }}>\n            In a natural disaster or emergency, every second counts. That's why\n            this app was made, to give you, and others, the few critical seconds\n            needed to get to safety.\n            <br />\n            <br />\n            For now, have a look around the app, and when the time comes,\n            remember to <b>drop, cover, and hold</b>.\n          </Typography>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n\nfunction App() {\n  const [error, setError] = React.useState(\"\");\n  const [severity, setSeverity] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const isNative = window.location.search.includes(\"native=true\");\n  const [connected, setConnected] = React.useState(isNative ? true : false);\n  const [socket, setSocket] = React.useState(() => !isNative && io());\n  const history = useHistory();\n\n  var userAgent = navigator.userAgent.toLowerCase();\n  var android = userAgent.indexOf(\"android\") > -1;\n\n  // const [appDialogOpen, setAppDialogOpen] = React.useState(\n  //   android && !isNative\n  // );\n\n  const [appDialogOpen, setAppDialogOpen] = React.useState(false);\n\n  const [interactionDialogOpen, setInteractionDialogOpen] = React.useState(\n    !appDialogOpen\n  );\n\n  console.log(\"is native\", isNative);\n  console.log(\"is android\", android);\n\n  const [tab, setTab] = React.useState(0);\n\n  function makeAlert(error, severity) {\n    setError(error);\n    setSeverity(severity);\n    setOpen(true);\n  }\n\n  window.makeAlert = makeAlert;\n\n  const urls = [\"/\", \"/quakes\", \"/get-ready\"];\n\n  React.useEffect(() => {\n    if (!isNative) {\n      socket.on(\"connect\", function () {\n        setConnected(true);\n      });\n      socket.on(\"disconnect\", function () {\n        setConnected(false);\n      });\n      return () => {\n        socket.off(\"connect\");\n        socket.off(\"disconnect\");\n      };\n    }\n  }, []);\n\n  return (\n    <Fade in>\n      <div>\n        <Snackbar\n          open={open}\n          autoHideDuration={5000}\n          onClose={() => {\n            setOpen(false);\n          }}\n        >\n          <Alert\n            severity={severity}\n            onClose={() => {\n              setOpen(false);\n            }}\n          >\n            {error}\n          </Alert>\n        </Snackbar>\n        {!isNative && <Alerts socket={socket} />}\n        <Switch>\n          <Route path=\"/quakes\">\n            <Quakes setTab={setTab} />\n          </Route>\n          <Route path=\"/get-ready\">\n            <GetReady setTab={setTab} />\n          </Route>\n          <Route path=\"/after\">\n            <After setTab={setTab} />\n          </Route>\n          <Route path=\"/\">\n            <Home setTab={setTab} connected={connected} isNative={isNative} />\n          </Route>\n        </Switch>\n        <BottomNavigation\n          value={tab}\n          onChange={(event, newValue) => {\n            setTab(newValue);\n            history.push(urls[newValue]);\n          }}\n          showLabels\n          style={{ width: \"100%\", bottom: 0, position: \"fixed\" }}\n        >\n          <BottomNavigationAction\n            label=\"Alerts\"\n            icon={<Icon>notifications</Icon>}\n          />\n          <BottomNavigationAction label=\"Quakes\" icon={<Icon>public</Icon>} />\n          <BottomNavigationAction\n            label=\"Get Ready\"\n            icon={<Icon>backpack</Icon>}\n          />\n        </BottomNavigation>\n        <Dialog\n          open={appDialogOpen}\n          onClose={() => setAppDialogOpen(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Get the app!\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Getting the app allows you to get alerts even when the app is\n              closed.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setAppDialogOpen(false)} color=\"primary\">\n              Stay on web\n            </Button>\n            <Button\n              onClick={() => (\n                window.open(\"/quake-alert.apk\", \"_blank\").focus(),\n                setAppDialogOpen(false)\n              )}\n              color=\"primary\"\n              variant=\"contained\"\n              autoFocus\n            >\n              Download\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          open={interactionDialogOpen}\n          onClose={() => setInteractionDialogOpen(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            This app is in development!\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              This app is currently in development, and as of now is unsuitable\n              for production use.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => setInteractionDialogOpen(false)}\n              color=\"primary\"\n            >\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </Fade>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  HashRouter as Router,\n  Link,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}